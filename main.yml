---
- name: Dev Env Setup Playbook
  hosts: devbox

  # Using STOW - https://opensource.com/article/20/1/configuration-management-stow

  # TODO: https://www.youtube.com/watch?v=DzNmUNvnB04
  # REVIEW - https://github.com/dreamsofcode-io/dotfiles/
  # https://github.com/mark-omarov/dotfiles
  # https://www.google.com/search?q=dot+files+java+macos+ansible+playbook
  # FOCUS: https://www.google.com/search?q=dot+files+java+macos+ansible+playbook

  # https://www.atpeaz.com/macos-set-up-for-coding-and-development/
  # https://medium.com/@gareth.stretton/obsidian-control-from-chrome-1ba27c5ef84b
  
  # Purpose: Search vault
  # Search Engine: Obsidian - Search
  # Shortcut: obs
  # URL: obsidian://search?vault=my_vault&query=%s

  # Purpose: Create a new note
  # Search Engine: Obsidian - Create Note
  # Shortcut: obn
  # URL: obsidian://new?vault=my_vault&silent=true&name=%s

  # Purpose: Save a link to a note
  # Search Engine: Obsidian - Save Link
  # Shortcut: obl
  # URL: obsidian://new?vault=my_vault&silent=true&name=Links&append=true&content=%s%0D%0A

  # Purpose: Save a TODO to a note
  # Search Engine: Obsidian - Save TODO
  # Shortcut: obn
  # URL: obsidian://new?vault=my_vault&silent=true&name=TODOs&append=true&content=-%20[%20]%20%s%0D%0A

  # .gitignore
  # git config --global core.excludesfile ~/.gitignore
  # echo .DS_Store >> ~/.gitignore

  vars_files:
    # Apps and Extensions
    - ./macOS/variables/homebrew-apps.yml
    - ./macOS/variables/npm-packages.yml
    - ./common/variables/vsc-extensions.yml

  vars:
    maven_path: "{{ ansible_env.HOME }}/dev/tools/maven"
    zshrc_path: "{{ ansible_env.HOME }}/.zshrc"
    shell_rc: "{{ ansible_env.HOME }}/.zshrc"
    shell_aliases: "{{ ansible_env.HOME }}/.zsh_aliases"
    git_config: "{{ ansible_env.HOME }}/.gitconfig"
    tmux_conf: "{{ ansible_env.HOME }}/.tmux.conf"
    pam_sudo: "/etc/pam.d/sudo" # Pluggable Authentication Modules 
  
  vars_prompt:
    - name: "dry_run"
      prompt: "Dry run only?"
      default: yes
      private: no

    - name: "env"
      prompt: "Which environment should be targeted?"
      default: dev
      private: no

  pre_tasks:
    - name: Check OS
      fail:
        msg: "This playbook only runs on macOS"
      when: ansible_distribution != 'MacOSX'

  tasks:
    - name: Dry run summary
      debug:
        msg: "Dry run ... {{env}} Exiting"
      when: dry_run | bool

    # Git
    - name: Setup Git
      import_tasks: ./common/tasks/setup_git.yml
      when: not (dry_run | bool)

    - name: Generate SSH Key
      import_tasks: ./common/tasks/create_ssh_key.yml
      when: not (dry_run | bool)

    # Install Apps
    - name: Install Applications - MacOS
      import_tasks: ./macOS/tasks/installation/install_brew_applications.yml
      when: not (dry_run | bool) and ansible_distribution == "MacOSX"

    # # Install core applications
    # - name: Install applications
    #   import_tasks: tasks/installation/install_applications.yml
    #   when: not (dry_run | bool)

    # # TODO: Add NVM to Path: 
    # # https://tecadmin.net/install-nvm-macos-with-homebrew/
    # - name: Install NVM, Node and NPM Packages
    #   import_tasks: tasks/installation/install_node_nvm_packages.yml
    #   when: not (dry_run | bool)

    # # Setup development tools
    # - name: Download AWS Coretto Java 8, 11 & 17
    #   import_tasks: tasks/dev_tools/download_java.yml
    #   when: not (dry_run | bool)

    # # FIXME - Need to be reviewed
    # # - name: Setup Maven
    # #   import_tasks: tasks/dev_tools/setup_maven.yml
    # #   when: not (dry_run | bool)

    # Customization & misc
    - name: Install VSCode extensions
      import_tasks: ./common/customization/customize_vscode.yml
      when: not (dry_run | bool)

    # - name: Setup OhMyZsh
    #   import_tasks: tasks/installation/install_ohmyzsh.yml
    #   when: not (dry_run | bool)

    # - name: Setup ZSH
    #   include_tasks: ./common/customization/setup_sh.yml
    #   when: not (dry_run | bool)

    # - name: Setup ZSH Aliases
    #   include_tasks: ../common/customization/setup_sh_aliases.yml
    #   when: not (dry_run | bool)

    # - name: Setup Git Aliases
    #   include_tasks: ../common/customization/setup_git_aliases.yml
    #   when: not (dry_run | bool)

    # # TODO Review - https://github.com/suzuki-shunsuke/tmux.conf/blob/master/mac_tmux.conf
    # # https://www.google.com/search?q=tmux+macos+ansible+playbook
    # - name: Setup tmux config
    #   include_tasks: ../common/customization/setup_tmux.yml
    #   when: not (dry_run | bool)

    # https://medium.com/@gareth.stretton/obsidian-control-from-chrome-1ba27c5ef84b
    # - name: Set URLAllowlist for Obsidian
    #   shell: defaults write com.google.Chrome URLAllowlist -array 'obsidian://*'
    #   become: yes
    #   become_method: sudo
    #   become_user: root
  # https://www.middlewareinventory.com/blog/ansible-pre-tasks-and-post-tasks-example/
  # post_tasks:
  #   - name: Enable touch authorisation for Sudo
  #     ansible.builtin.lineinfile:
  #       path: "{{pam_sudo}}"
  #       insertafter: 'pam_smartcard'
  #       line: 'auth       sufficient     pam_tid.so'
  #       state: present
  #     become: yes
  #     become_method: sudo
  #     become_user: root

  #   - name: notify Slack that the servers have been updated 
  #     tags: slack
  #     community.general.slack:
  #       token: aaa
  #       msg: |
  #           ### StatusUpdate ###
  #           – ------------------------------------
  #           ``
  #           `Server`: {{ansible_host}}
  #           `Status`: NodeJS Sample Application installed successfully
  #           – ------------------------------------
  #       channel: '#ansible'
  #       color: good
  #       username: 'Ansible on {{ inventory_hostname }}'
  #       link_names: 0
  #       parse: 'none'
  #     delegate_to: localhost